<UserControl x:Class="SaveAllTheTime.Views.CommitHintView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             Focusable="False"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate />
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="InvalidFocused"/>
                                    <VisualState x:Name="InvalidUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="visualRoot">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="HintStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.3">
                        <VisualTransition.GeneratedEasingFunction>
                            <PowerEase EasingMode="EaseInOut" Power="3"/>
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Green">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                            <EasingColorKeyFrame KeyTime="0" Value="#FFC1FFAA"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Yellow">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                            <EasingColorKeyFrame KeyTime="0" Value="#FFFFF16D"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Red">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                            <EasingColorKeyFrame KeyTime="0" Value="#FFFF4734"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LoadingStateGroup">
            	<VisualStateGroup.Transitions>
            		<VisualTransition GeneratedDuration="0:0:0.7">
            			<VisualTransition.GeneratedEasingFunction>
            				<BackEase EasingMode="EaseInOut" Amplitude="2"/>
            			</VisualTransition.GeneratedEasingFunction>
            		</VisualTransition>
            	</VisualStateGroup.Transitions>
            	<VisualState x:Name="NotLoading"/>
            	<VisualState x:Name="Loading">
            		<Storyboard>
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="viewbox">
            				<EasingDoubleKeyFrame KeyTime="0" Value="90"/>
            			</DoubleAnimationUsingKeyFrames>
            		</Storyboard>
            	</VisualState>
                <VisualState x:Name="Error">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="viewbox">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)" Storyboard.TargetName="textBlock">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <FontWeight>Bold</FontWeight>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontStyle)" Storyboard.TargetName="textBlock">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <FontStyle>Normal</FontStyle>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="MouseHoverStateGroup">
            	<VisualStateGroup.Transitions>
            		<VisualTransition GeneratedDuration="0:0:0.3">
            			<VisualTransition.GeneratedEasingFunction>
            				<PowerEase EasingMode="EaseInOut" Power="3"/>
            			</VisualTransition.GeneratedEasingFunction>
            		</VisualTransition>
            	</VisualStateGroup.Transitions>
            	<VisualState x:Name="NoHover"/>
            	<VisualState x:Name="Hover">
            		<Storyboard>
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="viewbox1">
            				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            			</DoubleAnimationUsingKeyFrames>
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="viewbox1">
            				<EasingDoubleKeyFrame KeyTime="0" Value="3"/>
            			</DoubleAnimationUsingKeyFrames>
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="viewbox1">
            				<EasingDoubleKeyFrame KeyTime="0" Value="0.82"/>
            			</DoubleAnimationUsingKeyFrames>
            		</Storyboard>
            	</VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Border Background="#22888888" Margin="0,0,48,32" CornerRadius="6" Width="40" Height="40" Cursor="Hand" ForceCursor="True">
            <Button x:Name="Open" Style="{DynamicResource NoChromeButton}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="GoAway" Header="Go Away" />
                    </ContextMenu>
                </Button.ContextMenu>
                <Grid Background="#01000000">
                    <Viewbox x:Name="viewbox1" Stretch="Uniform" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Opacity="0">
                    	<Viewbox.RenderTransform>
                    		<TransformGroup>
                    			<ScaleTransform/>
                    			<SkewTransform/>
                    			<RotateTransform/>
                    			<TranslateTransform/>
                    		</TransformGroup>
                    	</Viewbox.RenderTransform>
                    	<Viewbox.Effect>
                    		<BlurEffect Radius="8"/>
                    	</Viewbox.Effect>
                    	<Canvas Width="11" Height="7">
                    		<Path Fill="#FF464646" RenderTransformOrigin="0.5,0.5">
                    			<Path.RenderTransform>
                    				<TransformGroup>
                    					<ScaleTransform/>
                    					<SkewTransform/>
                    					<RotateTransform/>
                    					<TranslateTransform/>
                    				</TransformGroup>
                    			</Path.RenderTransform>
                    			<Path.Data>
                    				<PathGeometry Figures="m 10.498 3.007 v 1.5 h -2.736 c -0.164 0.547 -0.478 0.996 -0.94 1.348 -0.462 0.352 -0.987 0.527 -1.573 0.527 -0.586 0 -1.11 -0.176 -1.573 -0.527 -0.463 -0.351 -0.776 -0.801 -0.94 -1.348 h -2.736 v -1.5 h 2.736 c 0.164 -0.547 0.478 -0.996 0.94 -1.348 0.462 -0.352 0.987 -0.527 1.573 -0.527 0.586 0 1.11 0.176 1.573 0.527 0.463 0.351 0.776 0.801 0.94 1.348 h 2.736 z m -6.311 1.811 c 0.293 0.293 0.646 0.439 1.061 0.439 0.415 0 0.768 -0.146 1.061 -0.439 0.293 -0.293 0.439 -0.646 0.439 -1.061 0 -0.415 -0.146 -0.768 -0.439 -1.061 -0.293 -0.293 -0.646 -0.439 -1.061 -0.439 -0.415 0 -0.768 0.146 -1.061 0.439 -0.293 0.293 -0.439 0.646 -0.439 1.061 0 0.415 0.146 0.768 0.439 1.061 z" FillRule="NonZero"/>
                    			</Path.Data>
                    		</Path>
                    	</Canvas>
                    </Viewbox>

                    <Viewbox x:Name="viewbox" Stretch="Uniform" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                    	<Viewbox.RenderTransform>
                    		<TransformGroup>
                    			<ScaleTransform/>
                    			<SkewTransform/>
                    			<RotateTransform/>
                    			<TranslateTransform/>
                    		</TransformGroup>
                    	</Viewbox.RenderTransform>
                        <Canvas Width="11" Height="7">
                            <Path x:Name="path" Fill="Red" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                                <Path.Data>
                                    <PathGeometry Figures="m 10.498 3.007 v 1.5 h -2.736 c -0.164 0.547 -0.478 0.996 -0.94 1.348 -0.462 0.352 -0.987 0.527 -1.573 0.527 -0.586 0 -1.11 -0.176 -1.573 -0.527 -0.463 -0.351 -0.776 -0.801 -0.94 -1.348 h -2.736 v -1.5 h 2.736 c 0.164 -0.547 0.478 -0.996 0.94 -1.348 0.462 -0.352 0.987 -0.527 1.573 -0.527 0.586 0 1.11 0.176 1.573 0.527 0.463 0.351 0.776 0.801 0.94 1.348 h 2.736 z m -6.311 1.811 c 0.293 0.293 0.646 0.439 1.061 0.439 0.415 0 0.768 -0.146 1.061 -0.439 0.293 -0.293 0.439 -0.646 0.439 -1.061 0 -0.415 -0.146 -0.768 -0.439 -1.061 -0.293 -0.293 -0.646 -0.439 -1.061 -0.439 -0.415 0 -0.768 0.146 -1.061 0.439 -0.293 0.293 -0.439 0.646 -0.439 1.061 0 0.415 0.146 0.768 0.439 1.061 z" FillRule="NonZero"/>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Viewbox>

                    <TextBlock x:Name="textBlock" FontSize="32" FontFamily="Comic Sans MS" Text="?" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFC500FF" Opacity="0" FontWeight="Bold" />
                </Grid>
            </Button>
        </Border>

<!--    Uncomment this and the codebehind section if you want to test the transitions
        <TextBlock x:Name="MinutesTimeOverrideDisplay" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,2,0" />
        <Slider x:Name="MinutesTimeOverride" Minimum="0" Maximum="100" VerticalAlignment="Bottom" />
-->
    </Grid>
</UserControl>
